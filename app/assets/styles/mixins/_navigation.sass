// this is our generic vertical navigation bar as used throughout the site
// single li element
@mixin base_element
	
	border-right: 0px solid black
	$background-opacity: 0.6

	&:hover

		> a

			@include box-emboss(0.8, 0.5)
			background: transparent
			border-bottom: 0px
			+background-image(linear-gradient(rgba(#fff, $background-opacity), rgba(#655f5f,  $background-opacity*0.5), rgba(#aaa, $background-opacity*1.1)))
	> a

		// include our base font as stylized before!
		padding: 1em 0 1em 0	
		@include center
		// background-color: orange
		border-right: 1px solid black
		+background-image(linear-gradient(rgba(#fff, $background-opacity), rgba(#ccc,  $background-opacity), rgba(#aaa, $background-opacity*1.1)))
		// background-opacity 
		border-bottom: 1px solid black
		// place a triangle after each element
		span 

			// font-family: "Icons"		

	
// assumes that we will be putting an image as the background color
// assumes that our sprite is the class provided
@mixin image_element($class)	
	
	
		
@mixin horizontal_nav

	// navigation styles go here!
	> li
		@include box-emboss(0.8, 0.05)
		@include base_element

		> a
			// color: orange
				

// vertical nav is called in the context of an li element with a ul inside!
@mixin vertical_nav

	// this is responsible for the store etc pieces
	position: relative

	> a 
		padding-top: 1.5em
		display: block	
		width: 100%
		text-align: center

		// this direct span represents the top navigation piece for the vertical dropdown etc
		> span

			@include anchor_font
			padding-top: 2em
			font-size: 2em
			margin-top: 1em 
	> ul

		> li > a > span

			@include anchor_font		
			font-size: 1.2em




// decided that this isn't the best way to implement the grid system due to percentages
// decimals mess up the proportions etc of the grid
// thus, when parent!==elements we had all kind of issues
@mixin horizontal_ul_structure($parent, $elements)
	
	// best if this works as no decimal otherwise screws up everything!
	$element_size: $parent / $elements
	// assumes that it will be called in the context of a ul
	// span the parent # number of elements across
	@include span-columns($parent)

	// now make sure that the child spans the proper amount of elements with no overflow
	> li
		@include span-columns($element_size, $parent)
		&:last-of-type		

			@include span-columns($element_size omega, $parent)


// HORIZONTAL STRUCTURAL ELEMENTS

// horizontal dropdown as built out in main element
// this assumes that the element being attached is a
// pass in how far left to shift this element relative to the parent
// we will assume that the element is smaller
@mixin horizontal_dropdown($parent_column, $shift_columns:1) 
	
	// first determine how many columns constitute a parent column

	// determine how many columns across the entire screen is	
	$max_columns: $total-columns/$parent_column * $parent_column
	$shift: $shift_columns*$parent_column

	&:hover	

		> ul 
			display: block
	> ul

		// lets make this a new grid
		// that way we can properly space everything below!
		display: none

		// 12 columns of 1 column (parent width)
		@include span-columns($max_columns, $parent_column)

		// pull the entire list left according to the passed in parameter
		@include pull($shift, $parent_column)
		position: relative


// a list of vertical elements!
// the vertical nav is responsible for displaying $elements(li) elements 
@mixin horizontal_dropdown_structure($elements, $padding_columns: 2, $parent_columns: 12)

	// initialize a new grid here?
	// grab the total size all columns can span after padding!
	$total_size: $total-columns - 2*$padding_columns 		
	// grab the number of columns for each element
	$element_size: $total_size / $elements

	// we will assume that ul element is being called from a full width screen -- can fix this later
	> ul

		// include individual li elements!!! 
		> li

			// by default span the element by a fraction of 12 columns
			@include span-columns($element_size, $parent_columns)

			&:hover	

				background-color: orange

			// first li element needs to be pushed to the left!
			&:first-of-type

				// push it 2 columns relative of 12 by default!
				@include push($padding_columns, $parent_columns)

