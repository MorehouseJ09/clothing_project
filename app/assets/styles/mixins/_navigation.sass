// single li element
@mixin base_element
	
	$background-opacity: 0.6

	// hover elements to change the background and various elements!
	&:hover

		// a element is what we see!
		> a
			// transition: all 2s
			// change background gradient etc
			+background-image(linear-gradient(rgba(#fff, $background-opacity), rgba(#655f5f,  $background-opacity*0.5), rgba(#aaa, $background-opacity*1.1)))
			background: transparent
			border-bottom: 0px

		// ul element which is responsible
		> ul

			display: block
			transition: all 2s
			opacity: 1
	> a

		// include our base font as stylized before!
		@include center
		@include clearfix

		@include dark-border-emboss("right")
		// border-right: 1px solid black
		+background-image(linear-gradient(rgba(#fff, $background-opacity), rgba(#ccc,  $background-opacity), rgba(#aaa, $background-opacity*1.1)))

		// take away all span padding so that we can easily modularize and structure our code!
		> span

			display: block
			padding: 1em 0 1em 0	

	// base ul elements for dropdowns etc
	> ul 
		display: none
		
// assumes that we will be putting an image as the background color
@mixin horizontal_block_element($right_border: true, $left_border: false)

	// assume that this element is called within an li element	
	@include clearfix
	@include inline-block
	height: auto	
	display: block	

	// only include the right hand border for the elements that we have not banned it from
	@if $right_border

		@include border-emboss("right")

	// 
	@if $left_border

		@include border-emboss("left")

	> a	

		height: 100px
		width: 95%
		display: block
		margin: 0 auto
		text-align: center
		@include clearfix
		@include inline-block


		// include span element
		> span

			@include anchor_font
			margin-top: 1em	
			font-size: 1.5em
			display: block
			text-transform: uppercase




// assumes that our sprite is the class provided
@mixin image_element($image, $right_border: true, $left_border: false)	
	
	> a

		background: image-url($image)
		background-repeat: no-repeat
		background-size: 95% auto
		background-position: center center

		> span
			padding-top: 2.5em


// include the image attached as a background image and replace all images etc 
// should be called within the confines an li element
@mixin logo($image, $width: 90%)
	
	> a	
		height: 100%
		width: 100%
		// include compass hide-text to hide all span elements etc
		@include hide-text
		// include the passed in image for now
		
		> span	

			cursor: pointer
			transition: all 2s
			height: 100%
			width: 100%
			// this will all be optimized later into single sprite etc ...
			background: image-url($image)
			background-position: center center
			background-size: $width auto
			background-repeat: no-repeat

// this is a specific logo for our current site structure / design
// should be called within an li element
// assumes that the image is in logos/social and will have a hover as well!
@mixin social_logo($image, $logo_size)
	
	&:hover	

		@include logo("#{$image}_hover.png", $logo_size)


	// general logo element
	@include logo("#{$image}.png", $logo_size)		


// this is helpful for centering an image vertically based on our album elements that are present in the various album dropdowns etc
@mixin center_image_element($size: 50%)
	
	> a
		background-size: auto $size
		background-position: center 15%

// this is useful for centering a span inside of an a tag assuming that li has full height
@mixin center_text_element
	
	// for the first element the "all" link we want to center it vertically
	> a

		display: table
		height: 100%

		> span

			display: table-cell
			vertical-align: middle



// vertical nav is called in the context of an li element with a ul inside!
// this is called within the reference pane of an element that is below
@mixin vertical_nav

	// this is responsible for the store etc pieces
	position: relative
	overflow-y: auto
	height: 10em
	@include clearfix

	// this is the top element!
	> a 
		width: 100%
		text-align: center
		height: auto

	// this is the actual dropdown element
	// style the actual span elements
	> ul > li

		height: 1.5em

		> a 
			height: 100%

			> span

				@include anchor_font		
				font-size: 1.0em
				text-transform: uppercase		

				&:hover

					text-decoration: underline


// this is responsible for our basic horizontal structure
// this should be called on the top level ul elements
@mixin horizontal_ul_structure($parent, $elements, $size: false)
	
	$element_size: $parent / $elements
	@if $size

		$element_size: $size

	// assumes that it will be called in the context of a ul
	// span the parent # number of elements across
	@include span-columns($parent)
	// position: absolute
	// top: 100%

	// now make sure that the child spans the proper amount of elements with no overflow
	> li
		@include span-columns($element_size, $parent)
		&:last-of-type		

			@include span-columns($element_size omega, $parent)


// intiialize the horizontal dropdown structure
// this is responsible for implementing and rendering the entire spacing of the ul as it drops down
@mixin horizontal_dropdown($parent_column, $shift_columns:1) 
	
	// first determine how many columns constitute a parent column

	// determine how many columns across the entire screen is	
	$max_columns: $total-columns/$parent_column * $parent_column
	$shift: $shift_columns*$parent_column

	> ul

		// lets make this a new grid
		// that way we can properly space everything below!
		// 12 columns of 1 column (parent width)
		@include span-columns($max_columns, $parent_column)

		// pull the entire list left according to the passed in parameter
		@include pull($shift, $parent_column)
		position: relative
		


// this is responsible for centering out the elements and drawing them properly
@mixin horizontal_dropdown_structure($elements, $padding_columns: 2, $parent_columns: 12)

	// initialize a new grid here?
	// grab the total size all columns can span after padding!
	$total_size: $total-columns - 2*$padding_columns 		
	// grab the number of columns for each element
	$element_size: $total_size / $elements

	// we will assume that ul element is being called from a full width screen -- can fix this later
	> ul

		@include clearfix
		background: image-url("medium_background.png")
		overflow-y: auto

		// include individual li elements!!! 
		> li

			// by default span the element by a fraction of 12 columns
			@include span-columns($element_size, $parent_columns)

			// first li element needs to be pushed to the left!
			&:first-of-type

				// push it 2 columns relative of 12 by default!
				@include push($padding_columns, $parent_columns)













